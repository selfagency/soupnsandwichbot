{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"babel-polyfill\"","webpack:///./app.js","webpack:///external \"dotenv\"","webpack:///external \"axios\"","webpack:///external \"html-entities\"","webpack:///external \"fs\"","webpack:///external \"typa\"","webpack:///external \"mastodon-api\"","webpack:///external \"striptags\"","webpack:///external \"tabletojson\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_callee2","regeneratorRuntime","wrap","_context2","prev","next","t0","Promise","tab2json","t1","sent","t2","t3","abrupt","all","t4","stop","this","_callee3","img","extRegex","ext","filename","_context3","RegExp","is","str","exec","bad","toLowerCase","replace","fs","existsSync","axios","responseType","url","method","then","response","console","log","_typeof","data","pipe","createWriteStream","_callee4","imgs","out","res","_context4","length","M","post","file","createReadStream","JSON","stringify","test","push","undefined","id","_callee6","soups","sandwiches","_getFood","_getFood2","soup","soupImg","_getFood3","_getFood4","sand","sandImg","imgIn","imgOut","media_ids","status","_this2","_context6","getFood","_slicedToArray","getImg","upload","txtFilter","Name","Origin","setTimeout","_callee5","_context5","config","Entities","XmlEntities","Mastodon","striptags","tabletojson","entities","access_token","process","env","ACCESS_TOKEN","api_url","_this","_ref","_asyncToGenerator","mark","_callee","resolve","reject","_context","convert","stripHtmlFromCells","stripHtmlFromHeadings","_x","_x2","apply","arguments","err","food","urlRegex","item","Math","floor","random","Image","text","decode","_callee7","_ref8","_ref9","_context7","warmUp","_this3"],"mappings":"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","file":"./index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require(\"babel-polyfill\");","require('dotenv').config()\n\nconst axios = require('axios')\nconst Entities = require('html-entities').XmlEntities\nconst fs = require('fs')\nconst is = require('typa')\nconst Mastodon = require('mastodon-api')\nconst striptags = require('striptags')\nconst tabletojson = require('tabletojson')\n\n// initialize html entity converter\nconst entities = new Entities()\n\n// initialize mastodon api\nconst M = new Mastodon({\n  access_token: process.env.ACCESS_TOKEN,\n  api_url: 'https://bofa.lol/api/v1/'\n})\n\n// download convert html table to json\nfunction tab2json(url) {\n  try {\n    return new Promise(async (resolve, reject) => {\n      let data = await axios.get(url)\n      data = data.data\n      data = tabletojson.convert(data, {\n        stripHtmlFromCells: false,\n        stripHtmlFromHeadings: true\n      })\n      if (/error/.test(data)) reject(data)\n      resolve(data[0])\n    })\n  } catch (err) {\n    throw err\n  }\n}\n\n// initialize bot\nasync function warmUp() {\n  // console.log('Getting soups and sandwiches')\n  try {\n    return Promise.all([\n      await tab2json('https://en.wikipedia.org/wiki/List_of_soups'),\n      await tab2json('https://en.wikipedia.org/wiki/List_of_sandwiches')\n    ])\n  } catch (err) {\n    throw err\n  }\n}\n\n// get random food item\nfunction getFood(food) {\n  // console.log('Getting food item')\n  const urlRegex = new RegExp(/(?:src=\\\"\\/\\/)(.*?)(?:\\\")/g)\n  try {\n    const item = food[Math.floor(Math.random() * food.length)]\n    const img = urlRegex.exec(item.Image)\n    return [item, !is.bad(img) ? img[1] : null]\n  } catch (err) {\n    throw err\n  }\n}\n\n// get image for food item\nasync function getImg(img) {\n  try {\n    const extRegex = new RegExp(/(?:\\.)([0-9a-z]+$)/)\n    let ext, filename\n\n    // console.log(`img: ${img}`)\n    if (is.str(img)) {\n      ext = extRegex.exec(img)\n\n      if (!is.bad(ext)) {\n        ext = ext[1].toLowerCase()\n        // console.log(`ext: ${ext}`)\n      } else {\n        return null\n      }\n\n      if (is.str(ext)) {\n        // console.log(`img_in: ${img}`)\n        img = img\n          .replace(/thumb\\//g, '')\n          .replace(/(\\/\\d*px-)/g, '/')\n          .replace(/\\/[a-zA-Z0-9%$!#^&()_.-]*.{3,4}$/, '')\n        // console.log(`img_out: ${img}`)\n        filename = `./img/${img.replace(/\\/|\\./g, '_')}.${ext}`\n        if (fs.existsSync(filename)) return filename\n\n        return axios({\n          responseType: 'stream',\n          url: `https://${img}`,\n          method: 'get'\n        }).then(response => {\n          console.log(`filename: ${typeof filename} ${filename}`)\n          response.data.pipe(fs.createWriteStream(filename))\n          return filename\n        })\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  } catch (err) {\n    throw err\n  }\n}\n\n// upload media\nasync function upload(imgs) {\n  let out = []\n  try {\n    for (let i = 0; i <= imgs.length; i++) {\n      if (i === imgs.length) return out\n      const img = imgs[i]\n      console.log(`stream: ${img}`)\n\n      if (!is.bad(img)) {\n        console.log(`file exists: ${fs.existsSync(img)}`)\n        const res = await M.post('media', {\n          file: fs.createReadStream(img)\n        })\n        console.log(JSON.stringify(res.data))\n        if (/missing/g.test(res.data.url)) {\n          out.push(undefined)\n        } else {\n          out.push(res.data.id)\n        }\n      }\n    }\n  } catch (err) {\n    throw err\n  }\n}\n\n// filter text\nfunction txtFilter(text) {\n  return striptags(\n    entities\n      .decode(text)\n      .replace(/\\[.*\\]/, '')\n      .replace(/\\n/, '')\n  )\n}\n\n// generate post\nasync function post(soups, sandwiches) {\n  try {\n    // console.log('Creating post')\n    const [soup, soupImg] = getFood(soups)\n    const [sand, sandImg] = getFood(sandwiches)\n    const imgIn = [soupImg, sandImg]\n    const imgOut = await Promise.all([getImg(imgIn[0]), getImg(imgIn[1])])\n    console.log(`imgOut: ${imgOut}`)\n    const media_ids = await upload(imgOut)\n    console.log(`media_ids: ${media_ids}`)\n\n    const status = `🥣  ${txtFilter(soup.Name)}${\n      is.bad(soup.Origin) ? '' : ' [' + txtFilter(soup.Origin) + ']'\n    } n' 🥪  ${txtFilter(sand.Name)}${\n      is.bad(sand.Origin) ? '' : ' [' + txtFilter(sand.Origin) + ']'\n    }`\n    console.log(`status: ${status}`)\n\n    const res = await M.post('statuses', { status, media_ids })\n    if (/error/.test(res.data)) console.log(res.data)\n    setTimeout(async () => {\n      await post(soups, sandwiches)\n    }, 43200000)\n  } catch (err) {\n    throw err\n  }\n}\n\n;(async () => {\n  try {\n    const [soups, sandwiches] = await warmUp()\n    await post(soups, sandwiches)\n  } catch (err) {\n    throw err\n  }\n})()\n","module.exports = require(\"dotenv\");","module.exports = require(\"axios\");","module.exports = require(\"html-entities\");","module.exports = require(\"fs\");","module.exports = require(\"typa\");","module.exports = require(\"mastodon-api\");","module.exports = require(\"striptags\");","module.exports = require(\"tabletojson\");"],"sourceRoot":""}