{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app.js","webpack:///external \"axios\"","webpack:///external \"babel-polyfill\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"html-entities\"","webpack:///external \"mastodon-api\"","webpack:///external \"now-env\"","webpack:///external \"striptags\"","webpack:///external \"tabletojson\"","webpack:///external \"typa\""],"names":["Promise","tab2json","all","warmUp","img","extRegex","RegExp","ext","filename","is","str","exec","bad","toLowerCase","replace","fs","existsSync","axios","responseType","url","method","then","response","data","pipe","createWriteStream","getImg","imgs","out","i","length","M","post","file","createReadStream","res","test","push","undefined","id","upload","soups","sandwiches","getFood","soup","soupImg","sand","sandImg","imgIn","imgOut","media_ids","status","txtFilter","Name","Origin","console","log","require","express","Entities","XmlEntities","Mastodon","striptags","tabletojson","app","get","req","send","listen","entities","access_token","process","env","ACCESS_TOKEN","api_url","resolve","reject","convert","stripHtmlFromCells","stripHtmlFromHeadings","err","food","urlRegex","item","Math","floor","random","Image","text","decode"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","require('now-env')\n\nconst axios = require('axios')\nconst express = require('express')\nconst Entities = require('html-entities').XmlEntities\nconst fs = require('fs')\nconst is = require('typa')\nconst Mastodon = require('mastodon-api')\nconst striptags = require('striptags')\nconst tabletojson = require('tabletojson')\n\n// initialize express\nconst app = express()\napp.get('/', async (req, res) => {\n  try {\n    const [soups, sandwiches] = await warmUp()\n    await post(soups, sandwiches)\n    res.send('Success')\n  } catch (err) {\n    res.send(err)\n    throw err\n  }\n})\napp.listen(8082, () => console.log('Listening on port 8082!'))\n\n// initialize html entity converter\nconst entities = new Entities()\n\n// initialize mastodon api\nconst M = new Mastodon({\n  access_token: process.env.ACCESS_TOKEN,\n  api_url: 'https://bofa.lol/api/v1/'\n})\n\n// download convert html table to json\nfunction tab2json(url) {\n  try {\n    return new Promise(async (resolve, reject) => {\n      let data = await axios.get(url)\n      data = data.data\n      data = tabletojson.convert(data, {\n        stripHtmlFromCells: false,\n        stripHtmlFromHeadings: true\n      })\n      if (/error/.test(data)) reject(data)\n      resolve(data[0])\n    })\n  } catch (err) {\n    throw err\n  }\n}\n\n// initialize bot\nasync function warmUp() {\n  // console.log('Getting soups and sandwiches')\n  try {\n    return Promise.all([\n      await tab2json('https://en.wikipedia.org/wiki/List_of_soups'),\n      await tab2json('https://en.wikipedia.org/wiki/List_of_sandwiches')\n    ])\n  } catch (err) {\n    throw err\n  }\n}\n\n// get random food item\nfunction getFood(food) {\n  // console.log('Getting food item')\n  const urlRegex = new RegExp(/(?:src=\\\"\\/\\/)(.*?)(?:\\\")/g)\n  try {\n    const item = food[Math.floor(Math.random() * food.length)]\n    const img = urlRegex.exec(item.Image)\n    return [item, !is.bad(img) ? img[1] : null]\n  } catch (err) {\n    throw err\n  }\n}\n\n// get image for food item\nasync function getImg(img) {\n  try {\n    const extRegex = new RegExp(/(?:\\.)([0-9a-z]+$)/)\n    let ext, filename\n\n    // console.log(`img: ${img}`)\n    if (is.str(img)) {\n      ext = extRegex.exec(img)\n\n      if (!is.bad(ext)) {\n        ext = ext[1].toLowerCase()\n        // console.log(`ext: ${ext}`)\n      } else {\n        return null\n      }\n\n      if (is.str(ext)) {\n        // console.log(`img_in: ${img}`)\n        img = img\n          .replace(/thumb\\//g, '')\n          .replace(/(\\/\\d*px-)/g, '/')\n          .replace(/\\/[a-zA-Z0-9%$!#^&()_.-]*.{3,4}$/, '')\n        // console.log(`img_out: ${img}`)\n        filename = `./img/${img.replace(/\\/|\\./g, '_')}.${ext}`\n        if (fs.existsSync(filename)) return filename\n\n        return axios({\n          responseType: 'stream',\n          url: `https://${img}`,\n          method: 'get'\n        }).then(response => {\n          // console.log(`filename: ${typeof filename} ${filename}`)\n          response.data.pipe(fs.createWriteStream(filename))\n          return filename\n        })\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  } catch (err) {\n    throw err\n  }\n}\n\n// upload media\nasync function upload(imgs) {\n  let out = []\n  try {\n    for (let i = 0; i <= imgs.length; i++) {\n      if (i === imgs.length) return out\n      const img = imgs[i]\n      // console.log(`stream: ${img}`)\n\n      if (!is.bad(img)) {\n        // console.log(`file exists: ${fs.existsSync(img)}`)\n        const res = await M.post('media', {\n          file: fs.createReadStream(img)\n        })\n        // console.log(JSON.stringify(res.data))\n        if (/missing/g.test(res.data.url)) {\n          out.push(undefined)\n        } else {\n          out.push(res.data.id)\n        }\n      }\n    }\n  } catch (err) {\n    throw err\n  }\n}\n\n// filter text\nfunction txtFilter(text) {\n  return striptags(\n    entities\n      .decode(text)\n      .replace(/\\[.*\\]/, '')\n      .replace(/\\n/, '')\n  )\n}\n\n// generate post\nasync function post(soups, sandwiches) {\n  try {\n    // console.log('Creating post')\n    const [soup, soupImg] = getFood(soups)\n    const [sand, sandImg] = getFood(sandwiches)\n    const imgIn = [soupImg, sandImg]\n    const imgOut = await Promise.all([getImg(imgIn[0]), getImg(imgIn[1])])\n    // console.log(`imgOut: ${imgOut}`)\n    const media_ids = await upload(imgOut)\n    // console.log(`media_ids: ${mediva_ids}`)\n\n    const status = `🥣  ${txtFilter(soup.Name)}${\n      is.bad(soup.Origin) ? '' : ' [' + txtFilter(soup.Origin) + ']'\n    } n' 🥪  ${txtFilter(sand.Name)}${\n      is.bad(sand.Origin) ? '' : ' [' + txtFilter(sand.Origin) + ']'\n    }`\n    console.log(`status: ${status}`)\n\n    const res = await M.post('statuses', { status, media_ids })\n    if (/error/.test(res.data)) console.log(res.data)\n  } catch (err) {\n    throw err\n  }\n}\n","module.exports = require(\"axios\");","module.exports = require(\"babel-polyfill\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"html-entities\");","module.exports = require(\"mastodon-api\");","module.exports = require(\"now-env\");","module.exports = require(\"striptags\");","module.exports = require(\"tabletojson\");","module.exports = require(\"typa\");"],"sourceRoot":""}